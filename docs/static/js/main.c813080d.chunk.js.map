{"version":3,"sources":["const.js","RoseCounter/utils.js","Components/Table.jsx","Components/Th.jsx","Components/Td.jsx","Components/Tr.jsx","Components/TdColor.jsx","RoseCounter/roseCounter.jsx","RoseCounter/packageCounter.jsx","RoseCounter/index.jsx","App.js","index.js"],"names":["orderDataTypes","id","name","proportions","colorNameMap","SH","color","ZL","B","G","J","K","O","R","F","Z","roseColors","Object","keys","paperColorsMap","sort","a","b","A","S","T","C","CH","M","packageNamesMap","MS","ZS","boxSizesMap","37","51","73","101","19","27","29","getColorsPerBouqet","bouqSize","orderColorCode","result","bColors","combination","maxTryAmount","trimmedCombination","replace","length","forEach","indexOf","push","slice","errText","alert","decodeCombination","i","proprotion","num","colorAmount","oneDivision","Array","fill","Math","ceil","floor","getDivision","parseInt","getSumOfColors","obj","reduce","sum","key","parseFloat","getTotalColors","data","totalOrders","totalRoses","roseStats","roseDetails","packagingDetails","order","sku","splitOrderSKU","split","numberOfBouquets","packagingType","bouqInfo","colorsInOrder","packagingColor","splitSku","getPackagingColor","error","Error","sumOfColors","res","size","getRealPackagingNames","sortable","fromEntries","children","style","className","scope","textAlign","rest","width","height","backgroundColor","border","margin","Table","maxWidth","map","Tr","Th","TdColor","Td","type","fileReader","useState","setData","orderType","setOrderType","handleFileRead","e","content","arr","CSV","filter","row","every","item","target","value","htmlFor","position","left","accept","onChange","handleFileChosen","file","files","FileReader","onloadend","readAsText","href","onClick","App","RoseCounter","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c813080d.chunk.js","sourcesContent":["export const appSections = [\n  {\n    id: \"roseCounter\",\n    name: \"Подсчет роз\"\n  },\n  {\n    id: \"skuGenerator\",\n    name: \"Генератор Артикулов\"\n  }\n];\n\nexport const orderDataTypes = [\n  {\n    id: \"roses\",\n    name: \"Розы\"\n  },\n  {\n    id: \"packaging\",\n    name: \"Упаковка\"\n  }\n];\n\nexport const proportions = {\n  // 9: {\n  //   1: [9],\n  //   2: [6, 3],\n  //   3: [3, 3, 3]\n  // },\n  // 19: {\n  //   1: [19],\n  //   2: [9, 10],\n  //   3: [7, 6, 6]\n  // },\n  // 27: {\n  //   1: [27],\n  //   2: [14, 13],\n  //   3: [9, 9, 9]\n  // },\n  // 37: {\n  //   1: [37],\n  //   2: [19, 18],\n  //   3: [13, 12, 12]\n  // },\n  // 51: {\n  //   1: [51],\n  //   2: [26, 25],\n  //   3: [17, 17, 17]\n  // },\n  // 61: {\n  //   1: [61],\n  //   2: [31, 30],\n  //   3: [21, 20, 20]\n  // },\n  // 73: {\n  //   1: [73],\n  //   2: [37, 36],\n  //   3: [25, 24, 24]\n  // },\n  // 87: {\n  //   1: [87],\n  //   2: [44, 43],\n  //   3: [29, 29, 29]\n  // }\n};\n\nexport const colorNameMap = {\n  // Более длинные коды должны быть выше\n  SH: {\n    name: \"Шоколадный\",\n    color: \"#4f2811\"\n  },\n  ZL: {\n    name: \"Золотой\",\n    color: \"#d4af37\"\n  },\n  B: {\n    name: \"Белый\",\n    color: \"white\"\n  },\n  G: {\n    name: \"Голубой\",\n    color: \"blue\"\n  },\n  J: {\n    name: \"Желтый\",\n    color: \"yellow\"\n  },\n  K: {\n    name: \"Красный\",\n    color: \"red\"\n  },\n  O: {\n    name: \"Оранжевый\",\n    color: \"orange\"\n  },\n  R: {\n    name: \"Розовый\",\n    color: \"pink\"\n  },\n  F: {\n    name: \"Фиолетовый\",\n    color: \"#8b00ff\"\n  },\n  Z: {\n    name: \"Зеленый\",\n    color: \"green\"\n  },\n};\n\nexport const roseColors = Object.keys(colorNameMap);\n\nexport const type = \"B\";\n\nexport const sizes = [7, 19, 37, 61].sort((a, b) => a - b);\nexport const paperColorsMap = {\n  A: {\n    name: \"Аквамарин\",\n    color: \"#7fffd4\"\n  },\n  B: {\n    name: \"Белый\",\n    color: \"white\"\n  },\n  G: {\n    name: \"Голубой\",\n    color: \"#add8e6\"\n  },\n  J: {\n    name: \"Желтый\",\n    color: \"yellow\"\n  },\n  Z: {\n    name: \"Зеленый\",\n    color: \"green\"\n  },\n  K: {\n    name: \"Красный\",\n    color: \"red\"\n  },\n  O: {\n    name: \"Оранжевый\",\n    color: \"orange\"\n  },\n  R: {\n    name: \"Розовый\",\n    color: \"pink\"\n  },\n  S: {\n    name: \"Синий\",\n    color: \"blue\"\n  },\n  T: {\n    name: \"Темно-голубой\",\n    color: \"#72bcd4\"\n  },\n  F: {\n    name: \"Фиолетовый\",\n    color: \"#8b00ff\"\n  },\n  ZL: {\n    name: \"Золотой\",\n    color: \"#d4af37\"\n  },\n  C: {\n    name: \"Сиреневый\",\n    color: \"#c8a2c8\"\n  },\n  CH: {\n    name: \"Чёрный\",\n    color: \"black\"\n  },\n  M: {\n    name: \"Малиновый\",\n    color: \"maroon\"\n  },\n  SH: {\n    name: \"Шоколадный\",\n    color: \"#4f2811\"\n  }\n};\n\nexport const paperColors = Object.keys(paperColorsMap).sort();\n\nexport const packageNamesMap = {\n  B: \"Букет\",\n  M: \"Мини-коробка\",\n  MS: \"Мини-коробка (сердце)\",\n  K: \"Корзина\",\n  SH: \"Шляпная коробка\",\n  Z: \"Шляпная коробка (закрытая)\",\n  ZS: \"Сердце (закрытое)\",\n  S: \"Сердце\"\n};\n\nexport const boxSizesMap = {\n  SH: {\n    37: \"12\",\n    51: \"16\",\n    73: \"20\",\n    101: \"25\"\n  },\n  Z: {\n    19: \"16\",\n    27: \"18\",\n    29: \"20\",\n    37: \"20\"\n  }\n};\n","import { proportions, roseColors, boxSizesMap } from \"../const\";\n\nconst getDivision = (num, colorAmount) => {\n  let result = [];\n\n  const oneDivision = num / colorAmount;\n  if (num % colorAmount === 0) {\n    result = new Array(colorAmount).fill(oneDivision);\n  } else {\n    result.push(Math.ceil(oneDivision));\n    for (let i = 2; i <= colorAmount; i++) {\n      result.push(Math.floor(oneDivision));\n    }\n  }\n  return result;\n};\n\nconst decodeCombination = (combination) => {\n  let maxTryAmount = 100;\n  let trimmedCombination = combination.replace(\" \", \"\");\n  let result = [];\n\n  while (trimmedCombination.length !== 0 && maxTryAmount !== 0) {\n    roseColors.forEach((color) => {\n      if (trimmedCombination.indexOf(color) !== 0) {\n        return;\n      } else {\n        result.push(color);\n        trimmedCombination = trimmedCombination.slice(color.length);\n      }\n    });\n    maxTryAmount -=1;\n  }\n  if (maxTryAmount === 0) {\n    const errText = `Ошибка обработки комбинации ${combination}. Она будет пропущена. (Возможно новый цвет?)`;\n    alert(errText)\n  };\n\n  return result;\n};\n\nconst getColorsPerBouqet = (bouqSize, orderColorCode) => {\n  const result = {};\n  const bColors = decodeCombination(orderColorCode);\n  bColors.forEach((color, i) => {\n    const proprotion =\n      proportions[bouqSize] && proportions[bouqSize][bColors.length]\n        ? proportions[bouqSize][bColors.length]\n        : getDivision(bouqSize, bColors.length);\n    result[color] = parseInt(proprotion[i], 10);\n  });\n\n  return result;\n};\n\nconst getSumOfColors = (obj) => Object.keys(obj).reduce((sum, key) => sum + parseFloat(obj[key] || 0), 0);\n\nconst getPackagingColor = (packagingType, splitSku) => (packagingType !== \"K\" ? splitSku[1] : \"plain\");\n\nconst getRealPackagingNames = (packagingDetails) => {\n  let result = {};\n  Object.keys(packagingDetails).forEach((packagingType) => {\n    result[packagingType] = {};\n    const colors = Object.keys(packagingDetails[packagingType]);\n    colors.forEach((color) => {\n      switch (packagingType) {\n        case \"B\": {\n          const sumOfColors = getSumOfColors(packagingDetails[packagingType][color]);\n          result[packagingType][color] = `${sumOfColors / 2} листов (${sumOfColors}шт.)`;\n          break;\n        }\n        case \"K\": {\n          result[packagingType][color] = `${packagingDetails[packagingType][\"plain\"][27]} шт.`;\n          break;\n        }\n        case \"M\":\n        case \"MS\": {\n          const sumOfColors = getSumOfColors(packagingDetails[packagingType][color]);\n          result[packagingType][color] = `${sumOfColors} шт.`;\n          break;\n        }\n        case \"SH\":\n        case \"Z\": {\n          const obj = packagingDetails[packagingType][color];\n          let res = \"\";\n          Object.keys(obj).forEach((size) => {\n            res = `${res}${boxSizesMap[packagingType][size]}см - ${obj[size]} шт.\\n`;\n          });\n          result[packagingType][color] = res;\n          break;\n        }\n        case \"ZS\":\n        case \"S\": {\n          const obj = packagingDetails[packagingType][color];\n          let res = \"\";\n\n          Object.keys(obj).forEach((size) => {\n            res = `${res}${size} - ${obj[size]} шт.\\n`;\n          });\n          result[packagingType][color] = res;\n          break;\n        }\n        default:\n          return;\n      }\n    });\n  });\n\n  return result;\n};\nexport const getTotalColors = (data) => {\n  let result = {\n    totalOrders: 0,\n    totalRoses: 0,\n    roseStats: {},\n    roseDetails: {},\n    packagingDetails: {}\n  };\n\n  data.forEach((order, i) => {\n    try {\n      const sku = order[2];\n      const updatedSKU = sku.replace(\"ZS\", \"S\"); // \"ZS\" id is the same as \"S\"\n      const splitOrderSKU = updatedSKU.split(\"-\");\n      const numberOfBouquets = order[3];\n      const bouqSize = splitOrderSKU[0].replace(/^\\D+/g, \"\");\n      const packagingType = splitOrderSKU[0].replace(/\\d/g, \"\");\n      result.totalOrders = result.totalOrders += 1;\n\n      // roses\n      result.totalRoses = result.totalRoses += parseInt(bouqSize, 10) * numberOfBouquets;\n\n      const orderColorCode = splitOrderSKU.length === 2 || packagingType === 'K' ? splitOrderSKU[1] : splitOrderSKU[2];\n      const bouqInfo = getColorsPerBouqet(bouqSize, orderColorCode);\n\n      Object.keys(bouqInfo).forEach((color) => {\n        const colorsInOrder = bouqInfo[color] * numberOfBouquets;\n\n        // if (!result.roseStats[color]) {\n        //   result.roseStats[color] = {};\n        // }\n        // if (!result.roseStats[color][sku]) {\n        //   result.roseStats[color][sku] = [];\n        //   result.roseStats[color][sku].push({\n        //     orderId: order[1],\n        //     numberOfBouquets,\n        //     colorsInOrder\n        //   });\n        // } else {\n        //   result.roseStats[color][sku].push({\n        //     orderId: order[1],\n        //     numberOfBouquets,\n        //     colorsInOrder\n        //   });\n        // }\n\n        if (!result.roseDetails[color]) {\n          result.roseDetails[color] = colorsInOrder;\n        } else {\n          result.roseDetails[color] += colorsInOrder;\n        }\n      });\n\n      // packaging\n      const packagingColor = getPackagingColor(packagingType, splitOrderSKU);\n      if (packagingType !== 'R') {\n        if (!result.packagingDetails[packagingType]) {\n          result.packagingDetails[packagingType] = {};\n        }\n        if (!result.packagingDetails[packagingType][packagingColor]) {\n          result.packagingDetails[packagingType][packagingColor] = {};\n        }\n        if (!result.packagingDetails[packagingType][packagingColor][bouqSize]) {\n          result.packagingDetails[packagingType][packagingColor][bouqSize] = 1;\n        } else {\n          result.packagingDetails[packagingType][packagingColor][bouqSize] =\n            result.packagingDetails[packagingType][packagingColor][bouqSize] + 1;\n        }\n      }\n    } catch(error) {\n      const errText = `Ошибка обработки заказа ${order}. Строка ${i + 1}`;\n      alert(errText)\n      throw new Error(errText)\n    }\n  });\n  result.packagingDetails = getRealPackagingNames(result.packagingDetails);\n  let sortable = [];\n  for (let color in result.roseDetails) {\n    sortable.push([color, result.roseDetails[color]]);\n  }\n\n  sortable.sort((a, b) => b[1] - a[1]);\n  result.roseDetails = Object.fromEntries(sortable);\n\n  return result;\n};\n","import React from \"react\";\n\nexport default ({ children, style, className = \"\" }) => (\n  <table\n    style={style}\n    className={`mx-auto table table-bordered mt-3 ${className}`}\n  >\n    <tbody>{children}</tbody>\n  </table>\n);\n","import React from \"react\";\n\nexport default ({ children }) => (\n  <th\n    scope=\"row\"\n    style={{\n      textAlign: \"left\"\n    }}\n  >\n    {children}\n  </th>\n);\n","import React from \"react\";\n\nexport default ({ children, ...rest }) => <td {...rest}>{children}</td>;\n","import React from \"react\";\n\nexport default ({ children }) => <tr>{children}</tr>;\n","import React from \"react\";\n\nexport default ({ color, ...rest }) => (\n  <td {...rest}>\n    <div\n      style={{\n        width: \"25px\",\n        height: \"25px\",\n        backgroundColor: color,\n        border: \"1px solid #dee2e6\",\n        margin: \"0 auto\"\n      }}\n    />\n  </td>\n);\n","import React from \"react\";\nimport { colorNameMap } from \"../const\";\nimport Table from \"../Components/Table\";\nimport Th from \"../Components/Th\";\nimport Td from \"../Components/Td\";\nimport Tr from \"../Components/Tr\";\nimport TdColor from \"../Components/TdColor\";\n\nexport default ({ data }) => (\n  <Table style={{ maxWidth: \"500px\" }}>\n    {Object.keys(data.roseDetails).map((color) => (\n      <Tr key={color}>\n        <Th>{colorNameMap[color].name}</Th>\n        <TdColor color={colorNameMap[color].color} />\n        <Td>{data.roseDetails[color]} шт.</Td>\n      </Tr>\n    ))}\n    <Tr>\n      <Th>Всего Роз:</Th>\n      <Td />\n      <Td>{data.totalRoses} шт.</Td>\n    </Tr>\n    <Tr>\n      <Th>Всего заказов:</Th>\n      <Td />\n      <Td>{data.totalOrders} шт.</Td>\n    </Tr>\n  </Table>\n);\n","import React from \"react\";\nimport { paperColorsMap, packageNamesMap } from \"../const\";\nimport Table from \"../Components/Table\";\nimport Td from \"../Components/Td\";\nimport Tr from \"../Components/Tr\";\nimport TdColor from \"../Components/TdColor\";\n\nexport default ({ data }) => (\n  <Table className=\"table__package\" style={{ maxWidth: \"700px\" }}>\n    {Object.keys(data.packagingDetails).sort().map((type) => (\n      <Tr key={type}>\n        <Td width=\"200px\">{packageNamesMap[type]}</Td>\n        <Td>\n          <Table>\n            {Object.keys(data.packagingDetails[type])\n              .sort()\n              .map((color) => (\n                <Tr key={color}>\n                  <Td width=\"150px\">{paperColorsMap[color] ? paperColorsMap[color].name : \"Нет цвета\"}</Td>\n\n                  {paperColorsMap[color] ? (\n                    <TdColor width=\"70px\" height=\"100%\" color={paperColorsMap[color].color} />\n                  ) : (\n                    <Td width=\"70px\">&nbsp;</Td>\n                  )}\n                  <Td>\n                    <div>{data.packagingDetails[type][color]}</div>\n                  </Td>\n                </Tr>\n              ))}\n          </Table>\n        </Td>\n      </Tr>\n    ))}\n  </Table>\n);\n","import React, { useState } from \"react\";\nimport * as CSV from \"csv-string\";\nimport { getTotalColors } from \"./utils\";\nimport { orderDataTypes } from \"../const\";\nimport RoseCounter from \"./roseCounter\";\nimport PackageCounter from \"./packageCounter\";\n\nexport default () => {\n  let fileReader;\n  const [data, setData] = useState(null);\n  const [orderType, setOrderType] = useState(orderDataTypes[0].id);\n\n  const handleFileChosen = (file) => {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n    if (file) {\n      fileReader.readAsText(file);\n    }\n  };\n\n  const handleFileRead = (e) => {\n    const content = fileReader.result;\n    let arr = CSV.parse(content).filter(row => !row.every(item => item === \"\"));\n    // arr = arr.slice(1, arr.length);\n    setData(getTotalColors(arr));\n    e.target.value = null;\n  };\n\n  return (\n    <div>\n      <h5 className=\"mt-4\">Калькулятор заказов</h5>\n      <div className=\"mx-auto mt-2\">\n        <label htmlFor=\"file\" className=\"btn btn-warning\">\n          {data ? \"Загрузи еще\" : \"Загрузи файл\"}\n        </label>\n        <input\n          style={{\n            position: \"absolute\",\n            left: \"-999px\"\n          }}\n          type=\"file\"\n          id=\"file\"\n          accept=\".csv\"\n          onChange={(e) => handleFileChosen(e.target.files[0])}\n        />\n        {data && (\n          <div className=\"tabs mt-1\">\n            <ul className=\"nav nav-pills nav-fill\">\n              {orderDataTypes.map((type) => (\n                <li className=\"nav-item\" key={type.id}>\n                  <div\n                    className={`nav-link ${orderType === type.id ? \"active\" : \"\"}`}\n                    href=\"#\"\n                    onClick={() => {\n                      setOrderType(type.id);\n                    }}\n                  >\n                    {type.name}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        {data && orderType === orderDataTypes[0].id && <RoseCounter data={data} />}\n        {data && orderType === orderDataTypes[1].id && <PackageCounter data={data} />}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./styles.scss\";\nimport RoseCounter from \"./RoseCounter/index\";\n// import SkuGenerator from \"./SkuGenerator\";\n// import { appSections } from \"./const\";\n\nexport default function App() {\n  // const [activeSection, setActiveSection] = useState(appSections[0].id);\n\n  return (\n    <div className=\"App\">\n      {/* <div className=\"tabs mt-1\">\n        <ul className=\"nav nav-fill\">\n          {appSections.map((section) => (\n            <li className=\"nav-item\" key={section.id}>\n              <a\n                className=\"nav-link\"\n                href=\"#\"\n                onClick={() => {\n                  setActiveSection(section.id);\n                }}\n              >\n                {section.name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div> */}\n      <RoseCounter />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}